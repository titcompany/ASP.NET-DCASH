//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TIT.Datas
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TIT_Entities : DbContext
    {
        public TIT_Entities()
            : base("name=TIT_Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AspNetCustomer_Staff> AspNetCustomer_Staff { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUserRole> AspNetUserRoles { get; set; }
        public virtual DbSet<HD_CamDo> HD_CamDo { get; set; }
        public virtual DbSet<ThongTinThuChi> ThongTinThuChis { get; set; }
        public virtual DbSet<CuaHang> CuaHangs { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<ThayDoiSoTienHopDong> ThayDoiSoTienHopDongs { get; set; }
        public virtual DbSet<HD_ChoVay> HD_ChoVay { get; set; }
        public virtual DbSet<HD_BatHo> HD_BatHo { get; set; }
        public virtual DbSet<ThongTinDongLai> ThongTinDongLais { get; set; }
        public virtual DbSet<KhachHang> KhachHangs { get; set; }
        public virtual DbSet<KhachHangThuocCuaHang> KhachHangThuocCuaHangs { get; set; }
        public virtual DbSet<BaoCaoHangNgay> BaoCaoHangNgays { get; set; }
        public virtual DbSet<HD_VayDuNoGiamDan> HD_VayDuNoGiamDan { get; set; }
        public virtual DbSet<LichSuThaoTac> LichSuThaoTacs { get; set; }
    
        public virtual int CreateCustomerGoalFromLastMonth()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateCustomerGoalFromLastMonth");
        }
    
        public virtual int CreateSaleGoalFromLastMonth()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateSaleGoalFromLastMonth");
        }
    
        public virtual ObjectResult<GetSaleReport_Result> GetSaleReport(Nullable<System.DateTime> month, string provinceIds)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(System.DateTime));
    
            var provinceIdsParameter = provinceIds != null ?
                new ObjectParameter("ProvinceIds", provinceIds) :
                new ObjectParameter("ProvinceIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSaleReport_Result>("GetSaleReport", monthParameter, provinceIdsParameter);
        }
    
        public virtual ObjectResult<GetCompetitorReport_Result> GetCompetitorReport(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCompetitorReport_Result>("GetCompetitorReport", fromParameter, toParameter);
        }
    
        public virtual ObjectResult<GetEmployeeData_Result> GetEmployeeSKUData(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string provinceIds)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var provinceIdsParameter = provinceIds != null ?
                new ObjectParameter("ProvinceIds", provinceIds) :
                new ObjectParameter("ProvinceIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeData_Result>("GetEmployeeSKUData", fromParameter, toParameter, provinceIdsParameter);
        }
    
        public virtual ObjectResult<GetEmployeeSKUGoalData_Result> GetEmployeeSKUGoalData(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeSKUGoalData_Result>("GetEmployeeSKUGoalData", fromParameter, toParameter);
        }
    
        public virtual ObjectResult<GetCustomerReport_Result> GetCustomerReport(Nullable<System.DateTime> month, string provinceIds)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(System.DateTime));
    
            var provinceIdsParameter = provinceIds != null ?
                new ObjectParameter("ProvinceIds", provinceIds) :
                new ObjectParameter("ProvinceIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerReport_Result>("GetCustomerReport", monthParameter, provinceIdsParameter);
        }
    
        public virtual ObjectResult<GetCompetitorReport2_Result> GetCompetitorReport2(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCompetitorReport2_Result>("GetCompetitorReport2", fromParameter, toParameter);
        }
    
        public virtual ObjectResult<GetSalesEffectivenessReport_Result> GetSalesEffectivenessReport(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string provinceIds)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var provinceIdsParameter = provinceIds != null ?
                new ObjectParameter("ProvinceIds", provinceIds) :
                new ObjectParameter("ProvinceIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSalesEffectivenessReport_Result>("GetSalesEffectivenessReport", fromParameter, toParameter, provinceIdsParameter);
        }
    
        public virtual ObjectResult<GetSale2Report_Result> GetSale2Report(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string provinceIds)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var provinceIdsParameter = provinceIds != null ?
                new ObjectParameter("ProvinceIds", provinceIds) :
                new ObjectParameter("ProvinceIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSale2Report_Result>("GetSale2Report", fromParameter, toParameter, provinceIdsParameter);
        }
    
        public virtual ObjectResult<GetCompetitorReport3_Result> GetCompetitorReport3(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCompetitorReport3_Result>("GetCompetitorReport3", fromParameter, toParameter);
        }
    
        public virtual ObjectResult<GetCustomerAnalyzeReport_Result> GetCustomerAnalyzeReport(Nullable<System.DateTime> month, string provinceIds)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(System.DateTime));
    
            var provinceIdsParameter = provinceIds != null ?
                new ObjectParameter("ProvinceIds", provinceIds) :
                new ObjectParameter("ProvinceIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerAnalyzeReport_Result>("GetCustomerAnalyzeReport", monthParameter, provinceIdsParameter);
        }
    
        public virtual ObjectResult<GetTransactionReport_Result> GetTransactionReport(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string provinceIds)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var provinceIdsParameter = provinceIds != null ?
                new ObjectParameter("ProvinceIds", provinceIds) :
                new ObjectParameter("ProvinceIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTransactionReport_Result>("GetTransactionReport", fromParameter, toParameter, provinceIdsParameter);
        }
    
        public virtual ObjectResult<GetTransactionCompetitorReport_Result> GetTransactionCompetitorReport(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string provinceIds)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var provinceIdsParameter = provinceIds != null ?
                new ObjectParameter("ProvinceIds", provinceIds) :
                new ObjectParameter("ProvinceIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTransactionCompetitorReport_Result>("GetTransactionCompetitorReport", fromParameter, toParameter, provinceIdsParameter);
        }
    
        public virtual int ThemHopDongDNGD(string khachHang_CMND, Nullable<decimal> soTienVay, Nullable<double> hoaHong, Nullable<double> laiSuat, Nullable<int> thoiHanVay, Nullable<System.DateTime> ngayVay, string ghiChu, Nullable<int> cuaHang_Id, string nhanVien_Id, Nullable<System.DateTime> ngayTao, Nullable<System.DateTime> ngayCuoiCungDongTien, string tinhTrang, Nullable<System.DateTime> ngayBatDauDongLai, Nullable<System.DateTime> ngayHenGio, string ghiChuHenGio, Nullable<int> trangThaiHenGio, string urlHinh1, string urlHinh2, string urlHinh3, Nullable<decimal> tienLaiDaDong, Nullable<decimal> laiThangDau, Nullable<decimal> soTienPhaiDongMoiThang)
        {
            var khachHang_CMNDParameter = khachHang_CMND != null ?
                new ObjectParameter("KhachHang_CMND", khachHang_CMND) :
                new ObjectParameter("KhachHang_CMND", typeof(string));
    
            var soTienVayParameter = soTienVay.HasValue ?
                new ObjectParameter("SoTienVay", soTienVay) :
                new ObjectParameter("SoTienVay", typeof(decimal));
    
            var hoaHongParameter = hoaHong.HasValue ?
                new ObjectParameter("HoaHong", hoaHong) :
                new ObjectParameter("HoaHong", typeof(double));
    
            var laiSuatParameter = laiSuat.HasValue ?
                new ObjectParameter("LaiSuat", laiSuat) :
                new ObjectParameter("LaiSuat", typeof(double));
    
            var thoiHanVayParameter = thoiHanVay.HasValue ?
                new ObjectParameter("ThoiHanVay", thoiHanVay) :
                new ObjectParameter("ThoiHanVay", typeof(int));
    
            var ngayVayParameter = ngayVay.HasValue ?
                new ObjectParameter("NgayVay", ngayVay) :
                new ObjectParameter("NgayVay", typeof(System.DateTime));
    
            var ghiChuParameter = ghiChu != null ?
                new ObjectParameter("GhiChu", ghiChu) :
                new ObjectParameter("GhiChu", typeof(string));
    
            var cuaHang_IdParameter = cuaHang_Id.HasValue ?
                new ObjectParameter("CuaHang_Id", cuaHang_Id) :
                new ObjectParameter("CuaHang_Id", typeof(int));
    
            var nhanVien_IdParameter = nhanVien_Id != null ?
                new ObjectParameter("NhanVien_Id", nhanVien_Id) :
                new ObjectParameter("NhanVien_Id", typeof(string));
    
            var ngayTaoParameter = ngayTao.HasValue ?
                new ObjectParameter("NgayTao", ngayTao) :
                new ObjectParameter("NgayTao", typeof(System.DateTime));
    
            var ngayCuoiCungDongTienParameter = ngayCuoiCungDongTien.HasValue ?
                new ObjectParameter("NgayCuoiCungDongTien", ngayCuoiCungDongTien) :
                new ObjectParameter("NgayCuoiCungDongTien", typeof(System.DateTime));
    
            var tinhTrangParameter = tinhTrang != null ?
                new ObjectParameter("TinhTrang", tinhTrang) :
                new ObjectParameter("TinhTrang", typeof(string));
    
            var ngayBatDauDongLaiParameter = ngayBatDauDongLai.HasValue ?
                new ObjectParameter("NgayBatDauDongLai", ngayBatDauDongLai) :
                new ObjectParameter("NgayBatDauDongLai", typeof(System.DateTime));
    
            var ngayHenGioParameter = ngayHenGio.HasValue ?
                new ObjectParameter("NgayHenGio", ngayHenGio) :
                new ObjectParameter("NgayHenGio", typeof(System.DateTime));
    
            var ghiChuHenGioParameter = ghiChuHenGio != null ?
                new ObjectParameter("GhiChuHenGio", ghiChuHenGio) :
                new ObjectParameter("GhiChuHenGio", typeof(string));
    
            var trangThaiHenGioParameter = trangThaiHenGio.HasValue ?
                new ObjectParameter("TrangThaiHenGio", trangThaiHenGio) :
                new ObjectParameter("TrangThaiHenGio", typeof(int));
    
            var urlHinh1Parameter = urlHinh1 != null ?
                new ObjectParameter("UrlHinh1", urlHinh1) :
                new ObjectParameter("UrlHinh1", typeof(string));
    
            var urlHinh2Parameter = urlHinh2 != null ?
                new ObjectParameter("UrlHinh2", urlHinh2) :
                new ObjectParameter("UrlHinh2", typeof(string));
    
            var urlHinh3Parameter = urlHinh3 != null ?
                new ObjectParameter("UrlHinh3", urlHinh3) :
                new ObjectParameter("UrlHinh3", typeof(string));
    
            var tienLaiDaDongParameter = tienLaiDaDong.HasValue ?
                new ObjectParameter("TienLaiDaDong", tienLaiDaDong) :
                new ObjectParameter("TienLaiDaDong", typeof(decimal));
    
            var laiThangDauParameter = laiThangDau.HasValue ?
                new ObjectParameter("LaiThangDau", laiThangDau) :
                new ObjectParameter("LaiThangDau", typeof(decimal));
    
            var soTienPhaiDongMoiThangParameter = soTienPhaiDongMoiThang.HasValue ?
                new ObjectParameter("SoTienPhaiDongMoiThang", soTienPhaiDongMoiThang) :
                new ObjectParameter("SoTienPhaiDongMoiThang", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ThemHopDongDNGD", khachHang_CMNDParameter, soTienVayParameter, hoaHongParameter, laiSuatParameter, thoiHanVayParameter, ngayVayParameter, ghiChuParameter, cuaHang_IdParameter, nhanVien_IdParameter, ngayTaoParameter, ngayCuoiCungDongTienParameter, tinhTrangParameter, ngayBatDauDongLaiParameter, ngayHenGioParameter, ghiChuHenGioParameter, trangThaiHenGioParameter, urlHinh1Parameter, urlHinh2Parameter, urlHinh3Parameter, tienLaiDaDongParameter, laiThangDauParameter, soTienPhaiDongMoiThangParameter);
        }
    }
}
